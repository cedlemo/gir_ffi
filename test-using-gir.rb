#
# Exploratory program to see what kind of method_missing we would need in a
# module. In the end, this code would have to be generated by the Builder,
# or be provided by a mixin.
#

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), 'lib')
require 'girffi'
require 'girffi/builder'

module Gtk
  module Lib
    extend FFI::Library
    ffi_lib "gtk-x11-2.0"
  end

  def self.method_missing method, *arguments
    @@builder ||= GirFFI::Builder.new
    go = @@builder.function_introspection_data "Gtk", method.to_s

    # TODO: Unwind stack of raised NoMethodError to get correct error
    # message.
    return super if go.nil?
    return super if go.type != :function

    @@builder.attach_ffi_function self, go

    code = @@builder.function_definition go

    eigenclass = class << self; self; end
    eigenclass.class_eval code

    self.send method, *arguments
  end
end

(my_len, my_args) = Gtk.init ARGV.length, ARGV
puts Gtk.public_methods - Module.public_methods - ['method_missing']
p my_len, my_args
Gtk.flub
